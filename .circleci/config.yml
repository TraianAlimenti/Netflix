version: 2.1

workflows:
  version: 2
  build:
    jobs:
      - build

jobs:
  build:
    working_directory: ~/repo
    docker:
    # Primary container image where all steps run.
    - image: cimg/node:16.1.0
      auth:
        username: traian07 
        password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
      environment:
        milanesa: true
    # Secondary container image on common network.
    - image: circleci/postgres:9.6.2-alpine
      auth:
        username: traian07 
        password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
      environment:
        POSTGRES_USER: $POSTGRES_USER
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        POSTGRES_DB: $POSTGRES_DB

    steps:
      - checkout
      - run: npm -v
      # - run: npm i
      - restore_cache:
          name: restoring_cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      #- run: npm install
      - save_cache:
          name: saving_cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: locate psql
      - run: sudo su - postgres && psql && CREATE ROLE $POSTGRES_USER && GRANT ALL PRIVILEGES ON DATABASE test to $POSTGRES_USER
      #Wait for Postgres connection to open.
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      #Run validation checks & generate coverage reports
      - run: npm run test
      #Send coverage report to Codecov
      - run: yarn start reportCoverage
      - store_artifacts:
          path: ./coverage/clover.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: ./coverage/clover.xml  